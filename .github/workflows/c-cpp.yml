name: C/C++ CI

on: [ push, pull_request ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            shell: bash
          - os: macos-latest
            shell: bash
          - os: windows-latest
            sys: mingw64
            arch: x86_64
            shell: msys2
          - os: windows-latest
            sys: mingw32
            arch: i686
            shell: msys2
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }} {0}
    steps:
    - uses: msys2/setup-msys2@v2
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        release: false
        msystem: ${{matrix.sys}}
        install: >-
          patch git groff help2man
          mingw-w64-${{matrix.arch}}-autotools
          mingw-w64-${{matrix.arch}}-gcc
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - name: Install dependencies (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get -y update
        sudo apt-get -y install texlive-latex-extra texlive-science texlive-fonts-recommended texlive-fonts-extra help2man latexmk hevea valgrind
    - name: Install dependencies (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install help2man automake libtool
        # Prepend optional brew binary directories to PATH
        echo "$(brew --prefix m4)/bin" >> $GITHUB_PATH
    - name: Set up environment (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        echo "ASAN=yes" >> $GITHUB_ENV
        echo "LSAN_OPTIONS=verbosity=1:log_threads=1" >> $GITHUB_ENV
    - name: Set up environment (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        # Define _POSIX to get a full set of POSIX signal names from signal.h on mingw
        echo "CPPFLAGS=-D_POSIX" >> $GITHUB_ENV
    - name: Build
      run: |
        ./bootstrap
        if [[ "$ASAN" == "yes" ]]; then ./configure --enable-silent-rules CFLAGS="-g3 -fsanitize=address -fsanitize=undefined" LDFLAGS="-fsanitize=address -fsanitize=undefined"; else ./configure --enable-silent-rules; fi
        make check
        make distcheck
